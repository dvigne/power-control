kind: pipeline
type: docker
name: Linux Build

platform:
  os: linux

steps:
  - name: Compile Front End Assets
    image: node:17
    commands:
      - npm install
      - npm run prod

  - name: Build Binary Files
    image: electronuserland/builder
    commands:
      - apt-get update && apt-get install -y rpm fakeroot
      - npm run make

  - name: Publish Artifacts
    image: plugins/github-release
    settings:
      draft: true
      api_key:
        from_secret: github_token
      files:
        - out/make/*/*/*.deb
        - out/make/*/*/*.rpm
    when:
      event: tag

trigger:
  branch:
    - master
  event:
    - tag

---

kind: pipeline
type: exec
name: Apple Build

platform:
  os: darwin

environment:
  CI=1
  APPLE_ID=${apple_id}
  APPLE_ID_PASSWORD=${signing_key}

steps:
  - name: Unlock Developer Certificates
    commands:
      - security unlock-keychain -p keychain_pass

  - name: Compile Front End Assets
    commands:
      - npm install
      - npm run prod

  - name: Build Binary Files
    commands:
      - npm run make

  - name: Sign
    commands:
      - codesign --force --deep --sign ./out/make/volt-${DRONE_TAG}-arm64.dmg
      - codesign --force --deep --sign ./out/make/volt-${DRONE_TAG}-x64.dmg

  - name: Notarize
    commands:
      - xcrun altool -t osx -f ./out/make/volt-${DRONE_TAG}-arm64.dmg -primary-bundle-id com.dvigne.volt --notarize-app -username ${apple_id} -p @env:APPLE_ID_PASSWORD
      - xcrun altool -t osx -f ./out/make/volt-${DRONE_TAG}-x64.dmg -primary-bundle-id com.dvigne.volt --notarize-app -username ${apple_id} -p @env:APPLE_ID_PASSWORD

  - name: Publish Artifacts
    image: plugins/github-release
    settings:
      draft: true
      api_key:
        from_secret: github_token
      files:
        - out/make/*/*/*.dmg
    when:
      event: tag

trigger:
  branch:
    - master
  event:
    - tag
